jobs:
  include:
    - stage: build
      sudo: required
      services:
        - docker
      env:
        DOCKER_COMPOSE_VERSION: 1.27.4
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      before_script:
        - docker-compose up -d --build
      script:
        - docker-compose run api rake db:create 
        - docker-compose run api rake db:migrate
      after_script:
        - docker-compose down
    - stage: test-api
      script:
        - docker-compose run api rake db:create 
        - docker-compose run api rake db:migrate
        - docker-compose run api bundle exec rails test
    - stage: test-client
      script:
        - docker-compose run client yarn run test:unit
    - stage: code-quality
      env:
        global:
          - CC_TEST_REPORTER_ID=ba374f9b14633ae4fd7c61530fbf11f7e1f9c5b3c20abbea94033a99f46803a2
      language: ruby
      rvm:
      - 2.5.7
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
        - docker-compose run api rake db:create 
        - docker-compose run api rake db:migrate
      script:
      - docker-compose run api bundle exec rake
      - docker-compose run client yarn run test:unit
      after_script:
        - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.api.json api/coverage/.resultset.json # Format backend coverage
        - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.client.json client/coverage/lcov.info  # Format frontend coverage
